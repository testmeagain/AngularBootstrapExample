"use strict";angular.module("testAngularShopApp",["ngAnimate","ngCookies","ngMessages","ngResource","ngTouch","ui.router","ui.bootstrap","LocalStorageModule","dtrw.bcrypt"]).config(["$stateProvider","localStorageServiceProvider",function(a,b){a.state("login",{url:"/login",templateUrl:"views/login.html",controller:"LoginCtrl"}).state("signup",{url:"/signup",templateUrl:"views/signup.html",controller:"SignupCtrl"}).state("logout",{}).state("search",{url:"/search",templateUrl:"views/search.html",controller:"SearchCtrl"}),b.setPrefix("testAngularShopApp").setStorageType("localStorage")}]).run(["$state",function(a){a.go("search")}]);var MainCtrl=function(a){a.test=!0};MainCtrl.$inject=["$scope"],angular.module("testAngularShopApp").controller("MainCtrl",MainCtrl);var TopMenuCtrl=function(a,b,c,d,e,f){a.auth=e,a.cart=f,e.isAuthenticated()||c.go("login"),a.logout=function(){e.logout(),c.go("login")},a.showCart=function(){var c=d.open({animation:!1,templateUrl:"views/modal.html",controller:"ModalCtrl",scope:a,size:"sm"});c.result.then(function(){b.debug("On OK")},function(){b.debug("On Cancel")})}};TopMenuCtrl.$inject=["$scope","$log","$state","$modal","AuthService","CartService"],angular.module("testAngularShopApp").controller("TopMenuCtrl",TopMenuCtrl);var SignupCtrl=function(a,b,c){a.alerts=[],a.credentials={email:"",password1:"",password2:""},a.signup=function(){a.alerts=[],a.credentials.password!==a.credentials.password2?a.alerts.push({type:"danger",msg:"Passwords must match!"}):(c.signup(a.credentials),b.go("login"))},a.closeAlert=function(b){a.alerts.splice(b,1)}};SignupCtrl.$inject=["$scope","$state","AuthService"],angular.module("testAngularShopApp").controller("SignupCtrl",SignupCtrl);var LoginCtrl=function(a,b,c){a.alerts=[],a.credentials={email:"",password:""},a.login=function(){a.alerts=[],b.login(a.credentials)?c.go("search"):a.alerts.push({type:"danger",msg:"Bad e-mail or password!"})},a.closeAlert=function(b){a.alerts.splice(b,1)}};LoginCtrl.$inject=["$scope","AuthService","$state"],angular.module("testAngularShopApp").controller("LoginCtrl",LoginCtrl);var SearchCtrl=function(a,b,c){a.dateFromOpened=!1,a.dateToOpened=!1,a.filter={dateFrom:null,dateTo:null,inStock:!1,minPirce:null,maxPrice:null,color:""},a.dateOptions={dateFormat:"YYYY/MM/DD"},a.items=[],a.colors={},a.items=b.getAll().then(function(b){a.items=b,angular.forEach(b,function(b){a.colors[b.Color]=b.Color})}),a.toggleDateFromPopup=function(b){b.preventDefault(),b.stopPropagation(),a.dateFromOpened=!a.dateFromOpened},a.toggleDateToPopup=function(b){b.preventDefault(),b.stopPropagation(),a.dateToOpened=!a.dateToOpened},a.addToCart=function(a){c.add(a)}};SearchCtrl.$inject=["$scope","ItemsService","CartService"],angular.module("testAngularShopApp").controller("SearchCtrl",SearchCtrl);var ModalCtrl=function(a,b,c){a.items=c.getItems(),a.ok=function(){b.close()},a.cancel=function(){b.dismiss("cancel")}};ModalCtrl.$inject=["$scope","$modalInstance","CartService"],angular.module("testAngularShopApp").controller("ModalCtrl",ModalCtrl);var AuthService=function(a,b){var c={};return c.login=function(c){var d=b.get("email"),e=b.get("hash");return d===c.email&&a.compareSync(c.password,e)?(b.set("isauth",!0),!0):!1},c.logout=function(){b.set("isauth",!1)},c.signup=function(c){var d=a.genSaltSync(4),e=a.hashSync(c.password,d);b.set("email",c.email),b.set("hash",e)},c.isAuthenticated=function(){return b.get("isauth")},c.getEmail=function(){return b.get("email")},c};AuthService.$inject=["bcrypt","localStorageService"],angular.module("testAngularShopApp").factory("AuthService",AuthService);var ItemsService=function a(b,c){var a={};return a.get=function(){return b.get("/data.json")},a.getAll=function(){var a=c.defer();return b.get("/data.json").success(function(b){var c=[];b.forEach(function(a){c.push(a)}),a.resolve(c)}).error(function(){a.reject()}),a.promise},a};ItemsService.$inject=["$http","$q"],angular.module("testAngularShopApp").factory("ItemsService",ItemsService);var CartService=function b(){var b={},a=[];return b.add=function(b){a.push(b)},b.clear=function(){a=[]},b.count=function(){return a.length},b.getItems=function(){return a},b};angular.module("testAngularShopApp").factory("CartService",CartService);var StarsDirective=function(){return{restrict:"EA",template:'<span class="stars"><i class="glyphicon glyphicon-star" ng-repeat="i in arr track by $index"/></span>',replace:!0,require:"ngModel",scope:{ngModel:"="},controller:["$scope",function(a){a.arr=new Array(a.ngModel?Math.round(a.ngModel):0)}]}};angular.module("testAngularShopApp").directive("stars",StarsDirective);var OnlyNumbersDirective=function(){return{restrict:"A",require:"?ngModel",link:function(a,b,c,d){d&&(d.$parsers.push(function(a){angular.isUndefined(a)&&(a="");var b=a.replace(/[^0-9]+/g,"");return a!==b&&(d.$setViewValue(b),d.$render()),b}),b.bind("keypress",function(a){32===a.keyCode&&a.preventDefault()}))}}};angular.module("testAngularShopApp").directive("onlyNumbers",OnlyNumbersDirective);var ItemFilter=function(a){return function(b,c){var d=[];return angular.forEach(b,function(a){c.inStock&&a.InStock!==!0||c.minPrice&&a.Price<c.minPrice||c.maxPrice&&a.Price>c.maxPrice||c.color&&a.Color!==c.color||angular.isDate(c.dateFrom)&&c.dateFrom>Date.parse(a.Date)||angular.isDate(c.dateTo)&&c.dateTo<Date.parse(a.Date)||d.push(a)}),a.debug("Count:"+d.length),d}};ItemFilter.$inject=["$log"],angular.module("testAngularShopApp").filter("itemfilter",ItemFilter),angular.module("testAngularShopApp").run(["$templateCache",function(a){a.put("views/login.html",'<div class="container col-xs-12 col-sm-8 col-sm-offset-1 col-md-6 col-md-offset-3"> <form class="form-login well" name="LoginForm" ng-submit="login()"> <h2 class="form-login-heading">Please log in</h2> <alert ng-repeat="alert in alerts" type="{{alert.type}}" close="closeAlert($index)">{{alert.msg}}</alert> <div class="form-group"> <label for="inputEmail">E-mail address</label> <input type="email" id="inputEmail" class="form-control" placeholder="E-mail" ngrequired autofocus ng-model="credentials.email"> </div> <div class="form-group"> <label for="inputPassword1">Password</label> <input type="password" id="inputPassword1" class="form-control" placeholder="Password" required ng-model="credentials.password"> </div> <button class="btn btn-lg btn-primary btn-block" type="submit">Log in</button> </form> </div> '),a.put("views/logout.html",'<div class="container page-header"> <h1>Log out</h1> </div>'),a.put("views/main.html","<ui-view>"),a.put("views/modal.html",'<div class="modal-header"> <button type="button" class="close" data-dismiss="modal" ng-click="cancel()">&times;</button> <h4 class="modal-title">Cart items</h4> </div> <div class="modal-body"> <ul ng-if="items.length"> <li ng-repeat="item in items track by $index">{{ item.Name }}</li> </ul> <p ng-if="!items.length">Empty</p> </div> <div class="modal-footer"> <button class="btn btn-primary" ng-click="ok()">OK</button> <button class="btn btn-warning" ng-click="cancel()" data-dismiss="modal">Cancel</button> </div>'),a.put("views/search.html",'<div class="container page-header"> <h1>Search</h1> </div> <div class="container well"> <form class="form row"> <div class="container"> <div class="row"> <div class="form-group col-md-4"> <label for="date-from">Date from</label> <span class="input-group"> <input type="text" id="date-from" datepicker-popup="yyyy/MM/dd" is-open="dateFromOpened" datepicker-options="dateOptions" class="form-control" ng-model="filter.dateFrom"> <span class="input-group-btn"> <button type="button" class="btn btn-default" ng-click="toggleDateFromPopup($event)"><i class="glyphicon glyphicon-calendar"></i></button> </span> </span> </div> <div class="form-group col-md-4"> <label for="date-to">Date to</label> <span class="input-group"> <input type="text" id="date-to" datepicker-popup is-open="dateToOpened" datepicker-options="dateOptions" class="form-control" ng-model="filter.dateTo"> <span class="input-group-btn"> <button type="button" class="btn btn-default" ng-click="toggleDateToPopup($event)"><i class="glyphicon glyphicon-calendar"></i></button> </span> </span> </div> <div class="form-group col-md-4"> <label>In stock</label> <span class="form-control"> <input class="form-control11" type="checkbox" ng-model="filter.inStock"> </span> </div> </div> <div class="row"> <div class="form-group col-md-4"> <label>Min price:</label> <input type="text" only-numbers class="form-control" ng-model="filter.minPrice"> </div> <div class="form-group col-md-4"> <label>Max price:</label> <input type="text" only-numbers class="form-control" ng-model="filter.maxPrice"> </div> <div class="form-group col-md-4"> <label>Color</label> <select name="colors" class="form-control" ng-model="filter.color"> <option value="">--</option> <option value="{{ color }}" ng-repeat="color in colors">{{ color }}</option> </select> </div> </div> </div> </form> </div> <div class="container panel panel-default" ng-repeat="item in items|itemfilter:filter"> <div class="row panel-body"> <div class="media"> <div class="media-left"> <img class="media-object" ng-src="{{ item.Image }}" alt="{{ item.Name }}"> </div> <div class="media-body container"> <div class="row"> <div class="col-md-4"> Name: {{ item.Name }} </div> <div class="col-md-4"> Date: {{ item.Date }} </div> <div class="col-md-4"> Price: {{ item.Price | currency }} </div> </div> <div class="row"> <div class="col-md-4"> Color: {{ item.Color }} </div> <div class="col-md-4"> InStock: {{ item.InStock }} </div> <div class="col-md-4"> <button class="btn btn-default btn-primary" role="button" ng-click="addToCart(item)">Order</button> </div> </div> <div class="row"> <div class="col-md-4"> Raiting <stars ng-model="item.Raiting"> </div> </div> </div> </div> </div> </div>'),a.put("views/signup.html",'<div class="container col-xs-12 col-sm-8 col-sm-offset-1 col-md-6 col-md-offset-3"> <form class="form-signin well" name="SignupForm" ng-submit="signup()"> <h2 class="form-signin-heading">Please sign in</h2> <alert ng-repeat="alert in alerts" type="{{alert.type}}" close="closeAlert($index)">{{alert.msg}}</alert> <div class="form-group" ng-class="{ \'has-error\' : userForm.inputEmail.$invalid && !userForm.inputEmail.$pristine }"> <label for="inputEmail">E-mail address</label> <input type="email" id="inputEmail" class="form-control" placeholder="E-mail" ngrequired autofocus ng-model="credentials.email"> <p ng-show="userForm.inputEmail.$invalid && !userForm.inputEmail.$pristine" class="help-block">Enter a valid email.</p> </div> <div class="form-group"> <label for="inputPassword1">Password</label> <input type="password" id="inputPassword1" class="form-control" placeholder="Password" required ng-model="credentials.password"> </div> <div class="form-group"> <label for="inputPassword2">Confirm password</label> <input type="password" id="inputPassword2" class="form-control" placeholder="Password" required ng-model="credentials.password2"> </div> <button class="btn btn-lg btn-primary btn-block" type="submit">Sign up</button> </form> </div>'),a.put("views/topmenu.html",'<div class="header"> <div class="navbar navbar-default" role="navigation"> <div class="container"> <div class="navbar-header"> <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#js-navbar-collapse"> <span class="sr-only">Toggle navigation</span> <span class="icon-bar"></span> <span class="icon-bar"></span> <span class="icon-bar"></span> </button> <a class="navbar-brand" href="#/">Test</a> </div> <div class="collapse navbar-collapse" id="js-navbar-collapse"> <ul class="nav navbar-nav"> <li ui-sref-active="active" ng-if="!auth.isAuthenticated()"><a ui-sref="signup">Sign up</a></li> <li ui-sref-active="active" ng-if="!auth.isAuthenticated()"><a ui-sref="login">Log in</a></li> <li ui-sref-active="active" ng-if="auth.isAuthenticated()" ng-click="logout()"><a ui-sref="login">Log out</a></li> <li ui-sref-active="active" ng-if="auth.isAuthenticated()"><a ui-sref="search">Search</a></li> </ul> <span class="navbar-text navbar-right" ng-if="auth.isAuthenticated()">E-mail: {{ auth.getEmail() }}</span> <span class="navbar-text navbar-right" ng-if="auth.isAuthenticated()"><a ng-href="#" ng-click="showCart()">Cart: {{ cart.count() }} items</a></span> </div> </div> </div> </div>')}]);